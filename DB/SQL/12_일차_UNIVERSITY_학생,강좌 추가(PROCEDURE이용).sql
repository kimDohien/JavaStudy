
-- 학생 정보 추가를 위한 프로시저
DROP PROCEDURE IF EXISTS INSERT_STUDENT;

DELIMITER //
CREATE PROCEDURE INSERT_STUDENT(
	IN _YEAR INT,
    IN _NAME VARCHAR(10),
    IN _DEP VARCHAR(20),
    IN _PROFESSOR_NAME VARCHAR(20)  
)
BEGIN
DECLARE _DEP_NUM INT;
DECLARE _ST_COUNT INT DEFAULT 0;
DECLARE _ST_NUM VARCHAR(10);
DECLARE _PR_NUM INT;
-- 학과번호찾기
SET _DEP_NUM = (SELECT DE_NUM FROM DEPARTMENT WHERE DE_NAME LIKE _DEP);
	IF _DEP_NUM IS NOT NULL THEN
	SET _ST_COUNT = (SELECT COUNT(*)+1 FROM STUDENT WHERE ST_NUM LIKE CONCAT(_YEAR,_DEP_NUM,'%'));
SET _ST_NUM = CONCAT(_YEAR,_DEP_NUM,LPAD(_ST_COUNT,3,'0'));
-- 교수번호 찾기
SET _PR_NUM = (SELECT PR_NUM FROM PROFESSOR 
	WHERE SUBSTRING(PR_NUM,5,3) LIKE _DEP_NUM AND PR_NAME LIKE _PROFESSOR_NAME);
	IF _PR_NUM IS NOT NULL THEN
INSERT INTO STUDENT VALUES(_ST_NUM, _NAME, 1, '재학',_PR_NUM);
-- 전공찾기
INSERT MAJOR(MA_ST_NUM, MA_DE_NUM)VALUES(_ST_NUM, _DEP_NUM);
END IF;
END IF;
END // 
DELIMITER ;

CALL INSERT_STUDENT(2022,'고길동','컴퓨터 공학부', '홍길동');

-- 강좌등록
INSERT INTO LECTURE (LE_NAME, LE_SCHEDULE,LE_POINT,LE_CLASS,LE_YEAR,LE_TERM,LE_PR_NUM)
VALUES('컴퓨터 개론','월1,2',3,1,2022,'1','2022160001'),('자바','화1,2,3,4',3,1,2022,'1','2022160002');

/* 고길동 학생이 컴퓨터 개론과 자바를 수강
나길동 학생이 자바를 수강 */
INSERT INTO COURSE(CO_ST_NUM,CO_LE_NUM) SELECT '2022160001', LE_NUM FROM LECTURE WHERE LE_NAME LIKE '컴퓨터 개론' AND LE_TERM LIKE 1 AND LE_YEAR = 2022;
INSERT INTO COURSE(CO_ST_NUM,CO_LE_NUM) SELECT '2022160001', LE_NUM FROM LECTURE WHERE LE_NAME LIKE '자바' AND LE_TERM LIKE 1 AND LE_YEAR = 2022;
INSERT INTO COURSE(CO_ST_NUM,CO_LE_NUM) SELECT '2022160002', LE_NUM FROM LECTURE WHERE LE_NAME LIKE '자바' AND LE_TERM LIKE 1 AND LE_YEAR = 2022;

SELECT * FROM COURSE;

